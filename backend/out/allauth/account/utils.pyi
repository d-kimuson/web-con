from . import app_settings as app_settings, signals as signals
from ..exceptions import ImmediateHttpResponse as ImmediateHttpResponse
from ..utils import get_request_param as get_request_param, get_user_model as get_user_model, import_callable as import_callable, valid_email_or_none as valid_email_or_none
from .adapter import get_adapter as get_adapter
from .app_settings import EmailVerificationMethod as EmailVerificationMethod
from typing import Any, Optional

def get_next_redirect_url(request: Any, redirect_field_name: str = ...): ...
def get_login_redirect_url(request: Any, url: Optional[Any] = ..., redirect_field_name: str = ..., signup: bool = ...): ...
def logout_on_password_change(request: Any, user: Any) -> None: ...
def default_user_display(user: Any): ...
def user_display(user: Any): ...
def user_field(user: Any, field: Any, *args: Any): ...
def user_username(user: Any, *args: Any): ...
def user_email(user: Any, *args: Any): ...
def perform_login(request: Any, user: Any, email_verification: Any, redirect_url: Optional[Any] = ..., signal_kwargs: Optional[Any] = ..., signup: bool = ..., email: Optional[Any] = ...): ...
def complete_signup(request: Any, user: Any, email_verification: Any, success_url: Any, signal_kwargs: Optional[Any] = ...): ...
def cleanup_email_addresses(request: Any, addresses: Any): ...
def setup_user_email(request: Any, user: Any, addresses: Any): ...
def send_email_confirmation(request: Any, user: Any, signup: bool = ..., email: Optional[Any] = ...) -> None: ...
def sync_user_email_addresses(user: Any) -> None: ...
def filter_users_by_username(*username: Any): ...
def filter_users_by_email(email: Any, is_active: Optional[Any] = ...): ...
def passthrough_next_redirect_url(request: Any, url: Any, redirect_field_name: Any): ...
def user_pk_to_url_str(user: Any): ...
def url_str_to_user_pk(s: Any): ...
