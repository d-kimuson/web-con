from . import app_settings as app_settings
from ..utils import build_absolute_uri as build_absolute_uri, get_username_max_length as get_username_max_length, set_form_field_order as set_form_field_order
from .adapter import get_adapter as get_adapter
from .app_settings import AuthenticationMethod as AuthenticationMethod
from .models import EmailAddress as EmailAddress
from .utils import filter_users_by_email as filter_users_by_email, get_user_model as get_user_model, perform_login as perform_login, setup_user_email as setup_user_email, sync_user_email_addresses as sync_user_email_addresses, url_str_to_user_pk as url_str_to_user_pk, user_email as user_email, user_pk_to_url_str as user_pk_to_url_str, user_username as user_username
from django import forms
from django.contrib.auth.tokens import PasswordResetTokenGenerator
from typing import Any, Optional

class EmailAwarePasswordResetTokenGenerator(PasswordResetTokenGenerator): ...

default_token_generator: Any

class PasswordVerificationMixin:
    def clean(self): ...

class PasswordField(forms.CharField):
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...

class SetPasswordField(PasswordField):
    user: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def clean(self, value: Any): ...

class LoginForm(forms.Form):
    password: Any = ...
    remember: Any = ...
    user: Any = ...
    error_messages: Any = ...
    request: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def user_credentials(self): ...
    def clean_login(self): ...
    def clean(self): ...
    def login(self, request: Any, redirect_url: Optional[Any] = ...): ...

class _DummyCustomSignupForm(forms.Form):
    def signup(self, request: Any, user: Any) -> None: ...

class BaseSignupForm:
    username: Any = ...
    email: Any = ...
    username_required: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def clean_username(self): ...
    def clean_email(self): ...
    def validate_unique_email(self, value: Any): ...
    def clean(self): ...
    def custom_signup(self, request: Any, user: Any) -> None: ...

class SignupForm(BaseSignupForm):
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def clean(self): ...
    def save(self, request: Any): ...

class UserForm(forms.Form):
    user: Any = ...
    def __init__(self, user: Optional[Any] = ..., *args: Any, **kwargs: Any) -> None: ...

class AddEmailForm(UserForm):
    email: Any = ...
    def clean_email(self): ...
    def save(self, request: Any): ...

class ChangePasswordForm(PasswordVerificationMixin, UserForm):
    oldpassword: Any = ...
    password1: Any = ...
    password2: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def clean_oldpassword(self): ...
    def save(self) -> None: ...

class SetPasswordForm(PasswordVerificationMixin, UserForm):
    password1: Any = ...
    password2: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def save(self) -> None: ...

class ResetPasswordForm(forms.Form):
    email: Any = ...
    users: Any = ...
    def clean_email(self): ...
    def save(self, request: Any, **kwargs: Any): ...

class ResetPasswordKeyForm(PasswordVerificationMixin, forms.Form):
    password1: Any = ...
    password2: Any = ...
    user: Any = ...
    temp_key: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def save(self) -> None: ...

class UserTokenForm(forms.Form):
    uidb36: Any = ...
    key: Any = ...
    reset_user: Any = ...
    token_generator: Any = ...
    error_messages: Any = ...
    def clean(self): ...
