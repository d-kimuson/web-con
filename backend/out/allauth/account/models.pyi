from . import app_settings as app_settings, signals as signals
from .adapter import get_adapter as get_adapter
from .managers import EmailAddressManager as EmailAddressManager, EmailConfirmationManager as EmailConfirmationManager
from .utils import user_email as user_email
from django.db import models
from typing import Any, Optional

class EmailAddress(models.Model):
    user: Any = ...
    email: Any = ...
    verified: Any = ...
    primary: Any = ...
    objects: Any = ...
    class Meta:
        verbose_name: Any = ...
        verbose_name_plural: Any = ...
        unique_together: Any = ...
    def set_as_primary(self, conditional: bool = ...): ...
    def send_confirmation(self, request: Optional[Any] = ..., signup: bool = ...): ...
    def change(self, request: Any, new_email: Any, confirm: bool = ...) -> None: ...

class EmailConfirmation(models.Model):
    email_address: Any = ...
    created: Any = ...
    sent: Any = ...
    key: Any = ...
    objects: Any = ...
    class Meta:
        verbose_name: Any = ...
        verbose_name_plural: Any = ...
    @classmethod
    def create(cls, email_address: Any): ...
    def key_expired(self): ...
    def confirm(self, request: Any): ...
    def send(self, request: Optional[Any] = ..., signup: bool = ...) -> None: ...

class EmailConfirmationHMAC:
    email_address: Any = ...
    def __init__(self, email_address: Any) -> None: ...
    @property
    def key(self): ...
    @classmethod
    def from_key(cls, key: Any): ...
    def confirm(self, request: Any): ...
    def send(self, request: Optional[Any] = ..., signup: bool = ...) -> None: ...
