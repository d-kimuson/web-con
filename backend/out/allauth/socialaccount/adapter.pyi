from . import app_settings as app_settings
from ..account.app_settings import EmailVerificationMethod as EmailVerificationMethod
from ..account.models import EmailAddress as EmailAddress
from ..account.utils import user_email as user_email, user_field as user_field, user_username as user_username
from ..utils import deserialize_instance as deserialize_instance, email_address_exists as email_address_exists, import_attribute as import_attribute, serialize_instance as serialize_instance, valid_email_or_none as valid_email_or_none
from typing import Any, Optional

class DefaultSocialAccountAdapter:
    error_messages: Any = ...
    request: Any = ...
    def __init__(self, request: Optional[Any] = ...) -> None: ...
    def pre_social_login(self, request: Any, sociallogin: Any) -> None: ...
    def authentication_error(self, request: Any, provider_id: Any, error: Optional[Any] = ..., exception: Optional[Any] = ..., extra_context: Optional[Any] = ...) -> None: ...
    def new_user(self, request: Any, sociallogin: Any): ...
    def save_user(self, request: Any, sociallogin: Any, form: Optional[Any] = ...): ...
    def populate_user(self, request: Any, sociallogin: Any, data: Any): ...
    def get_connect_redirect_url(self, request: Any, socialaccount: Any): ...
    def validate_disconnect(self, account: Any, accounts: Any) -> None: ...
    def is_auto_signup_allowed(self, request: Any, sociallogin: Any): ...
    def is_open_for_signup(self, request: Any, sociallogin: Any): ...
    def get_signup_form_initial_data(self, sociallogin: Any): ...
    def deserialize_instance(self, model: Any, data: Any): ...
    def serialize_instance(self, instance: Any): ...
    def get_app(self, request: Any, provider: Any): ...

def get_adapter(request: Optional[Any] = ...): ...
