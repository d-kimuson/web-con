from ..adapter import get_adapter as get_adapter
from allauth.account.models import EmailAddress as EmailAddress
from allauth.socialaccount import app_settings as app_settings
from typing import Any, Optional

class AuthProcess:
    LOGIN: str = ...
    CONNECT: str = ...
    REDIRECT: str = ...

class AuthAction:
    AUTHENTICATE: str = ...
    REAUTHENTICATE: str = ...
    REREQUEST: str = ...

class AuthError:
    UNKNOWN: str = ...
    CANCELLED: str = ...
    DENIED: str = ...

class ProviderException(Exception): ...

class Provider:
    slug: Any = ...
    request: Any = ...
    def __init__(self, request: Any) -> None: ...
    @classmethod
    def get_slug(cls): ...
    def get_login_url(self, request: Any, next: Optional[Any] = ..., **kwargs: Any) -> None: ...
    def get_app(self, request: Any): ...
    def media_js(self, request: Any): ...
    def wrap_account(self, social_account: Any): ...
    def get_settings(self): ...
    def sociallogin_from_response(self, request: Any, response: Any): ...
    def extract_uid(self, data: Any) -> None: ...
    def extract_extra_data(self, data: Any): ...
    def extract_common_fields(self, data: Any): ...
    def cleanup_email_addresses(self, email: Any, addresses: Any) -> None: ...
    def extract_email_addresses(self, data: Any): ...
    @classmethod
    def get_package(cls): ...

class ProviderAccount:
    account: Any = ...
    def __init__(self, social_account: Any) -> None: ...
    def get_profile_url(self) -> None: ...
    def get_avatar_url(self) -> None: ...
    def get_brand(self): ...
    def to_str(self): ...
